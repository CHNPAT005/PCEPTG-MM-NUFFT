## Author: Patrick Chang
# Script file to simulate multivariate Ornstein Uhlenbeck
# includes an example to demonstrate the code

#---------------------------------------------------------------------------
## Simulation works via first order Euler discretization

# Ornstein Uhlenbeck

using Random
using LinearAlgebra
using Plots

function OU(n, mu, sigma, theta; kwargs...)
    # n - simlulation length
    # mu - vector input of the long term price average
    # sigma - covariance matrix of the stocks
    # startprice - starting price for the assets
    # theta - mean reverting rate

    k = size(sigma)[1]

    kwargs = Dict(kwargs)

    if haskey(kwargs, :startprice)
        startprice = kwargs[:startprice]
    else
        startprice = fill(100.0, (k,1))
    end

    if haskey(kwargs, :seed)
        seed = kwargs[:seed]
    else
        seed = 1
    end

    mu = reshape(mu, k, 1)
    theta = reshape(theta, k ,1)
    sigma = reshape(sigma, k, k)

    P = zeros(n, k)
    P[1,:] = log.(startprice)

    A = cholesky(sigma).U

    Random.seed!(seed)
    Z = randn(k, n-1)

    for i in 2:n
        z = Z[:,i-1]
        P[i,:] = P[i-1,:] + theta .* (log.(mu) - P[i-1,:]) + A * z
    end
    return exp.(P)
end

#------------------------------------------------------------------------------

n = 500
mu = [100, 100]
sigma = [0.1/86400 sqrt(0.1/86400)*0.35*sqrt(0.2/86400);
        sqrt(0.1/86400)*0.35*sqrt(0.2/86400) 0.2/86400]
theta = [0.035, 0.054]


P = OU(n, mu, sigma, theta)
P2 = OU(n, mu, sigma, theta, seed = 2)

# important thing to note about plotting is that [mxn] matrix is m series with n data points
p1 = plot(1:n, P, label = ["Line 1" "Line 2"])
title!(p1, "Correlated OU")
xlabel!(p1, "Seconds")
ylabel!(p1, "Price")

p2 = plot(1:n, P2, label = ["Line 1" "Line 2"])
title!(p2, "Correlated OU")
xlabel!(p2, "Seconds")
ylabel!(p2, "Price")

plot(p1, p2, layout = (1,2), legend = false, lw = 2)

#plt = plot(1, P[1,:], xlim = (0,500), ylim = (94, 102), title = "Correlated GBM", legend = false)
@gif for i in 1:500
    plot(1:i, P[1:i,:], xlim = (0,500), ylim = (94, 102), title = "Correlated OU", legend = false)
end every 10
